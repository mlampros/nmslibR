// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// nmslib_idx_dist
Rcpp::List nmslib_idx_dist(std::vector<std::vector<std::vector<double> > >& input_list, unsigned int k, int threads);
RcppExport SEXP _nmslibR_nmslib_idx_dist(SEXP input_listSEXP, SEXP kSEXP, SEXP threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::vector<std::vector<double> > >& >::type input_list(input_listSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(nmslib_idx_dist(input_list, k, threads));
    return rcpp_result_gen;
END_RCPP
}
// y_idxs
arma::mat y_idxs(arma::mat& idxs, std::vector<double>& y, int threads);
RcppExport SEXP _nmslibR_y_idxs(SEXP idxsSEXP, SEXP ySEXP, SEXP threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type idxs(idxsSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(y_idxs(idxs, y, threads));
    return rcpp_result_gen;
END_RCPP
}
// check_NaN_Inf
bool check_NaN_Inf(arma::mat x);
RcppExport SEXP _nmslibR_check_NaN_Inf(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(check_NaN_Inf(x));
    return rcpp_result_gen;
END_RCPP
}
